
SRCS[] =
    cassandra_consts.ml
    Cassandra.ml
    Cassandra.mli
    cassandra_types.ml
    cassandra_types.mli
    cassandra_lwt.ml
    cassandra_lwt.mli

OBJS[] =
    cassandra_types
    cassandra_consts
    Cassandra

OCAMLINCLUDES = $(file thrift)

OCamlPackage(cassandra_thrift, thrift/Thrift thrift/TChannelTransport thrift/TBinaryProtocol thrift/TFramedTransport thrift/TSocket thrift/TServer thrift/TSimpleServer thrift/TServerSocket gen-ocaml/cassandra_types gen-ocaml/cassandra_consts gen-ocaml/Cassandra)

# \
#	     $(removesuffix $(ls thrift/*.ml)) \
#	     $(addprefix gen-ocaml/, $(OBJS)))

OCamlLibrary(cassandra, cassandra_thrift cassandra cassandra_lwt)

$(addsuffixes .cmx .cmo .cmi .o, cassandra): cassandra_thrift.cmi

section
    OCAMLPACKS[] += camlp4.macro
    OCAMLFINDFLAGS += -syntax camlp4o
    cassandra.cmi cassandra.cmx cassandra.cmo cassandra.o:

section
    OCAMLPACKS[] += lwt.syntax
    OCAMLFINDFLAGS += -syntax camlp4o
    cassandra_lwt.cmi cassandra_lwt.cmx cassandra_lwt.cmo cassandra_lwt.o: \
        cassandra.cmi cassandra.cmx

.DEFAULT: cassandra.cma cassandra.cmxa

.SUBDIRS: gen-ocaml
    OCAMLFLAGS += -for-pack Cassandra_thrift
    # not detected for some reason, quick workaround
    Cassandra.cmi: cassandra_types.cmi cassandra_types.cmx
    cassandra_consts.cmi: cassandra_types.cmi

.SUBDIRS: thrift
    OCAMLFLAGS += -for-pack Cassandra_thrift

.PHONY: clean

clean:
    rm -f $(filter-proper-targets $(ls R, .)) *.annot *.s
